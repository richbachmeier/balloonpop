import userService from "./UserService";
import ApiError from "../utils/ApiError";

class AuthService {
  async register(userData) {
    //VALIDATE PASSWORD LENGTH
    if (userData.password.length < 6) {
      throw new ApiError("Password must be at least 6 characters", 400);
    }
    userData.hash = userService.generateHash(userData.password);
    //CREATE THE USER
    let user = await userService.create(userData);
    //REMOVE THE PASSWORD BEFORE RETURNING
    // @ts-ignore
    delete user._doc.hash;
    return user;
  }

  async login(creds) {
    let user = await userService.findOne({ email: creds.email });
    // @ts-ignore
    let valid = await user.validatePassword(creds.password); //CHECK THE PASSWORD
    if (!valid) {
      throw new ApiError("Invalid Email or Password", 401);
    }
    // @ts-ignore
    delete user._doc.hash; //ALWAYS REMOVE THE PASSWORD FROM THE USER OBJECT
    return user;
  }

  async authenticate(userId) {
    let user = await userService.getById({ _id: userId });
    // @ts-ignore
    delete user._doc.hash;
    return user;
  }
}

const authService = new AuthService();
export default authService;
