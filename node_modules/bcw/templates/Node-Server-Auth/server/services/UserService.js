import mongoose from "mongoose";
import bcrypt from "bcryptjs";
import User from "../models/User";
import ApiError from "../utils/ApiError";

const _repository = mongoose.model("User", User);
//bcrypt uses hashing and salt to obfiscate your password
const SALT = 10;

class UserService {
  generateHash(password) {
    return bcrypt.hashSync(password, SALT);
  }
  async findOne(query) {
    let data = await _repository.findOne(query);
    if (!data) {
      throw new ApiError("Invalid Email or Password", 401);
    }
    return data;
  }
  async getById(id) {
    let data = _repository.findById(id);
    if (!data) {
      throw new ApiError("Please Login to continue", 401);
    }
  }
  async create(data) {
    return await _repository.create(data);
  }
}

const userService = new UserService();
export default userService;
